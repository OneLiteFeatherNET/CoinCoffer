--- /dev/null
+++ b/src/main/java/net/milkbowl/vault/commands/InfoCommand.java
@@ -1,0 +_,89 @@
+package net.milkbowl.vault.commands;
+
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.JoinConfiguration;
+import net.kyori.adventure.text.TextComponent;
+import net.milkbowl.vault.Vault;
+import net.milkbowl.vault.chat.Chat;
+import net.milkbowl.vault.economy.Economy;
+import net.milkbowl.vault.permission.Permission;
+import org.bukkit.command.CommandSender;
+import org.bukkit.plugin.RegisteredServiceProvider;
+import org.incendo.cloud.annotations.Command;
+import org.incendo.cloud.annotations.CommandDescription;
+
+import java.util.Collection;
+import java.util.Set;
+import java.util.stream.Collectors;
+
+public final class InfoCommand {
+
+    private final Vault vault;
+
+    public InfoCommand(Vault vault) {
+        this.vault = vault;
+    }
+
+    @Command("vault-info")
+    @org.incendo.cloud.annotations.Permission("vault.admin")
+    @CommandDescription("Displays information about Vault")
+    public void onInfo(CommandSender sender) {
+        Collection<RegisteredServiceProvider<Economy>> econs = vault.getServer().getServicesManager().getRegistrations(Economy.class);
+        Set<TextComponent> econsComponents = econs.stream().map(RegisteredServiceProvider::getProvider).map(Economy::getName).map(Component::text).collect(Collectors.toSet());
+        Collection<RegisteredServiceProvider<Permission>> perms = vault.getServer().getServicesManager().getRegistrations(Permission.class);
+        Set<TextComponent> permComponents = perms.stream().map(RegisteredServiceProvider::getProvider).map(Permission::getName).map(Component::text).collect(Collectors.toSet());
+        Collection<RegisteredServiceProvider<Chat>> chats = vault.getServer().getServicesManager().getRegistrations(Chat.class);
+        Set<TextComponent> chatComponents = chats.stream().map(RegisteredServiceProvider::getProvider).map(Chat::getName).map(Component::text).collect(Collectors.toSet());
+
+        // Get Economy & Permission primary Services
+        RegisteredServiceProvider<Economy> rsp = vault.getServer().getServicesManager().getRegistration(Economy.class);
+        Economy econ = null;
+        if (rsp != null) {
+            econ = rsp.getProvider();
+        }
+        Permission perm = null;
+        RegisteredServiceProvider<Permission> rspp = vault.getServer().getServicesManager().getRegistration(Permission.class);
+        if (rspp != null) {
+            perm = rspp.getProvider();
+        }
+        Chat chat = null;
+        RegisteredServiceProvider<Chat> rspc = vault.getServer().getServicesManager().getRegistration(Chat.class);
+        if (rspc != null) {
+            chat = rspc.getProvider();
+        }
+        // Send user some info!
+        sender.sendMessage(Component.text('[')
+                        .append(Component.text(vault.getDescription().getName()))
+                        .append(Component.text(']'))
+                .append(Component.text(" Vault v").append(Component.text(vault.getDescription().getVersion())))
+                .append(Component.text(" Information"))
+        );
+        sender.sendMessage(Component.text('[')
+                .append(Component.text(vault.getDescription().getName()))
+                .append(Component.text(']'))
+                .append(Component.text(" Economy: "))
+                .append(Component.text(econ == null ? "None" : econ.getName()).appendSpace())
+                .append(Component.text('['))
+                .append(Component.join(JoinConfiguration.commas(true), econsComponents))
+                .append(Component.text(']'))
+        );
+        sender.sendMessage(Component.text('[')
+                .append(Component.text(vault.getDescription().getName()))
+                .append(Component.text(']'))
+                .append(Component.text(" Permission: "))
+                .append(Component.text(perm == null ? "None" : perm.getName()).appendSpace())
+                .append(Component.text('['))
+                .append(Component.join(JoinConfiguration.commas(true), permComponents))
+                .append(Component.text(']'))
+        );
+        sender.sendMessage(Component.text('[')
+                .append(Component.text(vault.getDescription().getName()))
+                .append(Component.text(']'))
+                .append(Component.text(" Chat: "))
+                .append(Component.text(chat == null ? "None " : chat.getName()).appendSpace())
+                .append(Component.text('['))
+                .append(Component.join(JoinConfiguration.commas(true), chatComponents))
+                .append(Component.text(']'))
+        );
+    }
+}
